import { json } from '@sveltejs/kit';
import { connectDB } from '$lib/server/db.js';

export async function GET() {
  try {
    const db = await connectDB();
    const paintings = await db.collection('paintings').find().toArray();

    const transformed = paintings.map(p => ({
      ...p,
      _id: p._id.toString()
    }));

    return json(transformed);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–∏–Ω:', error);
    return json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 });
  }
}

export async function POST({ request, locals }) {
  try {
    const user = locals.user;

    // üîí –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å
    if (!user || user.role !== 'admin') {
      return json({ error: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω' }, { status: 403 });
    }

    const data = await request.json();

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const requiredFields = ['title', 'price', 'dimensions', 'previewImage', 'hoverPreviewImage', 'detailImages', 'saleFileUrl'];
    for (const field of requiredFields) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–æ–µ –∏ –Ω–µ undefined/null
      if (data[field] === undefined || data[field] === null || (typeof data[field] === 'string' && data[field].trim() === '') || (Array.isArray(data[field]) && data[field].length === 0)) {
        return json({ error: `–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ${field}` }, { status: 400 });
      }
    }

    const painting = {
      title: data.title,
      description: data.description || '', // –û–ø–∏—Å–∞–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
      price: Number(data.price) || 0,
      dimensions: data.dimensions, // –¢–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
      previewImage: data.previewImage, // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
      hoverPreviewImage: data.hoverPreviewImage, // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
      detailImages: Array.isArray(data.detailImages) ? data.detailImages : [], // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ, –º–∞—Å—Å–∏–≤ URL
      saleFileUrl: data.saleFileUrl, // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ, URL —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
      createdAt: data.createdAt ? new Date(data.createdAt) : new Date()
    };

    const db = await connectDB();
    const result = await db.collection('paintings').insertOne(painting);

    return json({
      message: '–ö–∞—Ä—Ç–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞',
      id: result.insertedId.toString()
    });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–∏–Ω—ã:', err);
    return json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 });
  }
}